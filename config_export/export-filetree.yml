---
- name: Set timestamp fact for ouput_path
  hosts: localhost
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: Determine the timestamp for backup once for all nodes
      ansible.builtin.set_fact:
        now: '{{ lookup("pipe", "date +%Y%m%d-%H%M%S") }}'

- name: Create configuration filetree from AAP
  hosts: automationcontroller
  connection: local
  gather_facts: false
  become: false
  vars:
    controller_username: "{{ controller_admin_user }}"
    controller_password: "{{ controller_admin_password }}"
    controller_hostname: "{{ inventory_hostname }}"
    controller_api_plugin: "ansible.controller"
    now: "{{ hostvars['localhost']['now'] }}"
    output_path: "{{ config_dump_path | default('.') }}/{{ now }}-{{ controller_hostname }}-config"
  pre_tasks:
    - name: Set up authentication
      no_log: "{{ controller_configuration_filetree_create_secure_logging | default('false') }}"
      when: controller_oauthtoken is not defined
      block:
        - name: Get the controller oauth token
          ansible.builtin.uri:
            url: "https://{{ controller_hostname }}/api/v2/tokens/"
            user: "{{ controller_username }}"
            password: "{{ controller_password }}"
            method: "POST"
            force_basic_auth: true
            validate_certs: "{{ controller_validate_certs }}"
            status_code: 201
          register: authtoken_res

        - name: Set the oauth token to use from now on
          ansible.builtin.set_fact:
            controller_oauthtoken: "{{ authtoken_res.json.token }}"
            controller_oauthtoken_url: "{{ authtoken_res.json.url }}"

  roles:
    - role: infra.controller_configuration.filetree_create
      vars:
        now: "{{ hostvars['localhost']['now'] }}"

  post_tasks:
    - name: Delete the controller oauth token
      vars:
        now: "{{ hostvars['localhost']['now'] }}"
      ansible.builtin.uri:
        url: "https://{{ controller_hostname }}{{ controller_oauthtoken_url }}"
        user: "{{ controller_username }}"
        password: "{{ controller_password }}"
        method: "DELETE"
        force_basic_auth: true
        validate_certs: "{{ controller_validate_certs }}"
        status_code: 204
      when: controller_oauthtoken_url is defined
...
