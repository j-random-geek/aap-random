---
- name: Set timestamp fact for ouput_path
  hosts: localhost
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: Determine the timestamp for backup once for all nodes
      ansible.builtin.set_fact:
        now: '{{ lookup("pipe", "date +%Y%m%d-%H%M%S") }}'

- name: Create configuration filetree from AAP
  hosts: automationcontroller
  gather_facts: false
  become: false
  connection: local
  vars:
    flatten_output: "{{ export_filetree_flatten | default(true) | bool }}"
    output_filetree: "{{ hostvars['localhost']['now'] }}-{{ controller_hostname }}-config{% if flatten_output %}-flattened{% endif %}"
  tasks:
    - name: Create a filetree from the first Automation Controller only
      when:
        - inventory_hostname == groups['automationcontroller'][0]
      vars:
        controller_api_plugin: "ansible.controller"
        controller_validate_certs: "{{ validate_certs | default(true) | bool }}"
        controller_hostname: '{{ inventory_hostname }}{% if controller_port is defined %}:{{ controller_port }}{% endif %}'
      block:
        - name: Get the controller oauth token
          vars:
            controller_username: "{{ controller_admin_user }}"
            controller_password: "{{ controller_admin_password }}"
          ansible.builtin.uri: &uri_defaults
            user: "{{ controller_username }}"
            password: "{{ controller_password }}"
            force_basic_auth: true
            validate_certs: "{{ controller_validate_certs }}"
            url: "https://{{ controller_hostname }}/api/v2/tokens/"
            method: "POST"
            status_code: 201
          register: authtoken_res
          no_log: "{{ export_filetree_secure_logging | default(true) }}"

        - name: Set the oauth token to use from now on
          ansible.builtin.set_fact:
            controller_oauthtoken: "{{ authtoken_res.json.token }}"
            controller_oauthtoken_url: "{{ authtoken_res.json.url }}"
          no_log: "{{ export_filetree_secure_logging | default(true) }}"

        - name: Include the filetree creation role
          ansible.builtin.include_role:
            name: infra.controller_configuration.filetree_create
            public: true
          vars:
            output_path: "{{ config_dump_path | default('.') }}/{{ output_filetree }}"  # noqa: var-naming[no-role-prefix]

      always:
        - name: Delete the controller oauth token
          vars:
            controller_username: "{{ controller_admin_user }}"
            controller_password: "{{ controller_admin_password }}"
          ansible.builtin.uri:
            <<: *uri_defaults
            url: "https://{{ controller_hostname }}{{ controller_oauthtoken_url }}"
            method: "DELETE"
            status_code: 204
          when: controller_oauthtoken_url is defined
          no_log: "{{ export_filetree_secure_logging | default(true) }}"
...
